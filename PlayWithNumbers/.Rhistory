getwd()
# set directory to where your function file is located!
setwd("~/Dropbox/Mac/Desktop/PTNS2024")
getwd()
# set directory to where your function file is located!
setwd("~/Dropbox/Mac/Desktop/PTNS2024")
getwd()
library(devtools)
library(roxygen2)
library(usethis)
# 1. create the R package skeleton, choose a name for your R package
devtools::create('PlayWithNumbers')
# set working directory to *inside* your R package
setwd("~/Dropbox/Mac/Desktop/PTNS2024/PlayWithNumbers")
getwd()
# # 2. add a license
usethis::use_ccby_license()
# 4.1 Define which functions should be available to your users
# use "#' @export" for that, add it to your .R function file
# 4.2 Use the document() function to make the functions available
# to users
devtools::document()
# 6. build your package
# creates an installable file with ending "tar.gz"
devtools::build()
# 7. your package can now be installed (by you and others!)
rm(list = ls())
devtools::install()
library(PlayWithNumbers)
addThree(3)
addSeven(3)
squareNumber(4)
vector_with_numbers <- rnorm(1e4)
visualizeTransformations(vector_with_numbers)
visualizeTransformations
t.test
# 1. create the R package skeleton, choose a name for your R package
devtools::create('PlayWithNumbers')
# set working directory to *inside* your R package
setwd("~/Dropbox/Mac/Desktop/PTNS2024/PlayWithNumbers")
# set directory to where your function file is located!
setwd("~/Dropbox/Mac/Desktop/PTNS2024")
rm(list = ls())
library(devtools)
library(roxygen2)
library(usethis)
# 1. create the R package skeleton, choose a name for your R package
devtools::create('PlayWithNumbers')
# set working directory to *inside* your R package
setwd("~/Dropbox/Mac/Desktop/PTNS2024/PlayWithNumbers")
# # 2. add a license
usethis::use_ccby_license()
# 6. build your package
# creates an installable file with ending "tar.gz"
devtools::build()
# 4.1 Define which functions should be available to your users
# use "#' @export" for that, add it to your .R function file
# 4.2 Use the document() function to make the functions available
# to users
devtools::document()
warnings()
# 4.1 Define which functions should be available to your users
# use "#' @export" for that, add it to your .R function file
# 4.2 Use the document() function to make the functions available
# to users
devtools::document()
# 4.1 Define which functions should be available to your users
# use "#' @export" for that, add it to your .R function file
# 4.2 Use the document() function to make the functions available
# to users
devtools::document()
# 6. build your package
# creates an installable file with ending "tar.gz"
devtools::build()
# 7. your package can now be installed (by you and others!)
rm(list = ls())
devtools::install()
# 7. your package can now be installed (by you and others!)
rm(list = ls())
devtools::install()
library(PlayWithNumbers)
addThree(3)
addSeven(3)
squareNumber(4)
vector_with_numbers <- rnorm(1e4)
visualizeTransformations(vector_with_numbers)
visualizeTransformations
rm(list=ls())
setwd("/Users/alexandra/Dropbox/Mac/Desktop/sarafoglou-PlayWithNumbers/PlayWithNumbers")
?prop.test
?lm
devtools::install()
library(PlayWithNumbers)
addThree(3)
?addThree
# 4.1 Define which functions should be available to your users
# use "#' @export" for that, add it to your .R function file
# 4.2 Use the document() function to make the functions available
# to users
devtools::document()
# 6. build your package
# creates an installable file with ending "tar.gz"
devtools::build()
devtools::install()
library(PlayWithNumbers)
addSeven(3)
?addSeven
?multibridge::mult_bf_informed
# 4.1 Define which functions should be available to your users
# use "#' @export" for that, add it to your .R function file
# 4.2 Use the document() function to make the functions available
# to users
devtools::document()
# 6. build your package
# creates an installable file with ending "tar.gz"
devtools::build()
?addSeven
